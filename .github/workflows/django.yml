name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 a5_auth_server --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 a5_auth_server --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with mypy
      run: |
        mypy a5_auth_server --explicit-package-bases
    - name: Run Tests
      run: |
        python a5_auth_server/manage.py test


        - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: csirota97
          password: ${{ secrets.CR_PAT }}
        if: github.event_name != 'pull_request'
          
    - name: Create Timestamp
      run: |
        echo "curDate=$(date +%s)" >> $GITHUB_ENV
      if: github.event_name != 'pull_request'
            
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag ghcr.io/alvan-5/a5-auth-server:${{env.curDate}} --tag ghcr.io/alvan-5/a5-auth-server:latest
      if: github.event_name != 'pull_request'
  
    - name: Publish the Docker image
      run: |
        docker push ghcr.io/alvan-5/a5-auth-server:${{env.curDate}}
        docker push ghcr.io/alvan-5/a5-auth-server:latest
      if: github.event_name != 'pull_request'
  